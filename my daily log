This is my log for my coding lessons

##Log 1 ##Day 1 My learning journey for advanced lessons from Free Code Camp starts today Date: [3rd August 2020]

#TOPIC TO LEARN: DATA VISUALIZATION WITH D3#

*Today's progress: I completed one lesson in D3

#Data Visualization with D3: Add Document Elements with D3#

D3 has several methods that let you add and change elements in your document.

The select() method selects one element from the document. It takes an argument for the name of the element you want and returns an HTML node for the first element in the document that matches the name. Here's an example:

const anchor = d3.select("a");

The above example finds the first anchor tag on the page and saves an HTML node for it in the variable anchor. You can use the selection with other methods. The "d3" part of the example is a reference to the D3 object, which is how you access D3 methods.

Two other useful methods are append() and text().

The append() method takes an argument for the element you want to add to the document. It appends an HTML node to a selected item, and returns a handle to that node.

The text() method either sets the text of the selected node, or gets the current text. To set the value, you pass a string as an argument inside the parentheses of the method.

Here's an example that selects an unordered list, appends a list item, and adds text:

d3.select("ul") .append("li") .text("Very important item"); D3 allows you to chain several methods together with periods to perform a number of actions in a row.

QUESTION Use the select method to select the body tag in the document. Then append an h1 tag to it, and add the text "Learning D3" into the h1 element. THE TASK TO DO: The body should have one h1 element. Passed The h1 element should have the text "Learning D3" in it. Passed Your code should access the d3 object. Passed Your code should use the select method. Passed Your code should use the append method. Passed Your code should use the text method.

The solution for today that I completed is:

<script> // Add your code below this line d3.select("body") .append("h1") .text("Learning D3");
// Add your code above this line
</script>





##Day 2 Date:[4th August 2020]

Progress of the day:
Learnt and finished lesson 2 of the data visualization tutorial on fcc

Here is the code:

```
This is my log for my coding lessons

##Log 1 ##Day 1 My learning journey for advanced lessons from Free Code Camp starts today Date: [3rd August 2020]

#TOPIC TO LEARN: DATA VISUALIZATION WITH D3#

*Today's progress: I completed one lesson in D3

#Data Visualization with D3: Add Document Elements with D3#

D3 has several methods that let you add and change elements in your document.

The select() method selects one element from the document. It takes an argument for the name of the element you want and returns an HTML node for the first element in the document that matches the name. Here's an example:

const anchor = d3.select("a");

The above example finds the first anchor tag on the page and saves an HTML node for it in the variable anchor. You can use the selection with other methods. The "d3" part of the example is a reference to the D3 object, which is how you access D3 methods.

Two other useful methods are append() and text().

The append() method takes an argument for the element you want to add to the document. It appends an HTML node to a selected item, and returns a handle to that node.

The text() method either sets the text of the selected node, or gets the current text. To set the value, you pass a string as an argument inside the parentheses of the method.

Here's an example that selects an unordered list, appends a list item, and adds text:

d3.select("ul") .append("li") .text("Very important item"); D3 allows you to chain several methods together with periods to perform a number of actions in a row.

QUESTION Use the select method to select the body tag in the document. Then append an h1 tag to it, and add the text "Learning D3" into the h1 element. THE TASK TO DO: The body should have one h1 element. Passed The h1 element should have the text "Learning D3" in it. Passed Your code should access the d3 object. Passed Your code should use the select method. Passed Your code should use the append method. Passed Your code should use the text method.

The solution for today that I completed is:

<script> // Add your code below this line d3.select("body") .append("h1") .text("Learning D3");
// Add your code above this line
</script>
```



##Day3 #Log3
Date[4th august 2020]

Data Visualization with D3: Select a Group of Elements with D3
D3 also has the selectAll() method to select a group of elements. It returns an array of HTML nodes for all the items in the document that match the input string. Here's an example to select all the anchor tags in a document:

const anchors = d3.selectAll("a");

Like the select() method, selectAll() supports method chaining, and you can use it with other methods.

Select all of the li tags in the document, and change their text to "list item" by chaining the .text() method.

There should be 3 li elements on the page, and the text in each one should say "list item". Capitalization and spacing should match exactly.
Passed
Your code should access the d3 object.
Passed
Your code should use the selectAll method.

solution
<body>
  <ul>
    <li>Example</li>
    <li>Example</li>
    <li>Example</li>
  </ul>
  <script>
    // Add your code below this line


const li = d3.selectAll("li").text("list item");
           


    // Add your code above this line
  </script>
</body>







##Day 4 #Log 4
Date[05th August 2020]


Today's topic:Data Visualization with D3: Work with Data in D3
explanation:
The D3 library focuses on a data-driven approach. When you have a set of data, you can apply D3 methods to display it on the page. Data comes in many formats, but this challenge uses a simple array of numbers.

The first step is to make D3 aware of the data. The data() method is used on a selection of DOM elements to attach the data to those elements. The data set is passed as an argument to the method.

A common workflow pattern is to create a new element in the document for each piece of data in the set. D3 has the enter() method for this purpose.

When enter() is combined with the data() method, it looks at the selected elements from the page and compares them to the number of data items in the set. If there are fewer elements than data items, it creates the missing elements.

Here is an example that selects a ul element and creates a new list item based on the number of entries in the array:

<body>
  <ul></ul>
  <script>
    const dataset = ["a", "b", "c"];
    d3.select("ul").selectAll("li")
      .data(dataset)
      .enter()
      .append("li")
      .text("New item");
  </script>
</body>
It may seem confusing to select elements that don't exist yet. This code is telling D3 to first select the ul on the page. Next, select all list items, which returns an empty selection. Then the data() method reviews the dataset and runs the following code three times, once for each item in the array. The enter() method sees there are no li elements on the page, but it needs 3 (one for each piece of data in dataset). New li elements are appended to the ul and have the text "New item".

Select the body node, then select all h2 elements. Have D3 create and append an h2 tag for each item in the dataset array. The text in the h2 should say "New Title". Your code should use the data() and enter() methods.


task:
Select the body node, then select all h2 elements. Have D3 create and append an h2 tag for each item in the dataset array. The text in the h2 should say "New Title". Your code should use the data() and enter() methods.
hints:
Your document should have 9 h2 elements.
Passed
The text in the h2 elements should say "New Title". The capitalization and spacing should match exactly.
Passed
Your code should use the data() method.
Passed
Your code should use the enter() method.


solution:

<body>
  <script>
    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];

    // Add your code below this line

      d3.select("body").selectAll("h2")
        .data(dataset)
        .enter()
        .append("h2")
        .text("New Title");

    // Add your code above this line
  </script>
</body>


result on screen
New Title
New Title
New Title
New Title
New Title
New Title
New Title
New Title
New Title





##Day 5 #Log 5
Date[06th August 2020]

Today's topic:Data Visualization with D3: Work with Dynamic Data in D3

The chapter
In the previous challenge, you created a new h2 element for each item in the dataset array, but they all contained the same text, "New Title". This is because you have not made use of the data that is bound to each of the h2 elements.

The D3 text() method can take a string or a callback function as an argument:

selection.text((d) => d)

In the example above, the parameter d refers to a single entry in the dataset that a selection is bound to.

The task:

Using the current example as context, the first h2 element is bound to 12, the second h2 element is bound to 31, the third h2 element is bound to 22, and so on.

Change the text() method so that each h2 element displays the corresponding value from the dataset array with a single space and "USD". For example, the first heading should be "12 USD".


The first h2 should have the text "12 USD".
Passed
The second h2 should have the text "31 USD".
Passed
The third h2 should have the text "22 USD".
Passed
The fourth h2 should have the text "17 USD".
Passed
The fifth h2 should have the text "25 USD".
Passed
The sixth h2 should have the text "18 USD".
Passed
The seventh h2 should have the text "29 USD".
Passed
The eighth h2 should have the text "14 USD".
Passed
The ninth h2 should have the text "9 USD".


The solution

<body>
  <script>
    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];

    d3.select("body").selectAll("h2")
      .data(dataset)
      .enter()
      .append("h2")
      // Add your code below this line

      .text((d) => d + " USD");

      // Add your code above this line
  </script>
</body>


The result
12 USD
31 USD
22 USD
17 USD
25 USD
18 USD
29 USD
14 USD
9 USD










##Day 6 #Log 6
#Date[07th August 2020]
*Today's topic: Data Visualization with D3: Add Inline Styling to Elements*

How to do it: D3 lets you add inline CSS styles on dynamic elements with the style() method.

The style() method takes a comma-separated key-value pair as an argument. Here's an example to set the selection's text color to blue:

selection.style("color","blue");

Task:
Add the style() method to the code in the editor to make all the displayed text have a font-family of verdana.

Your h2 elements should have a font-family of verdana.
Passed
Your code should use the style() method.


Solution:
```
<body>
  <script>
    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];

    d3.select("body").selectAll("h2")
      .data(dataset)
      .enter()
      .append("h2")
      .text((d) => (d + " USD"))
      // Add your code below this line
            .style("font-family", "verdana");


      // Add your code above this line
  </script>
</body>
```


Next lesson topic:

Data Visualization with D3: Change Styles Based on Data

How to:
D3 is about visualization and presentation of data. It's likely you'll want to change the styling of elements based on the data. You can use a callback function in the style() method to change the styling for different elements.

For example, you may want to color a data point blue if it has a value less than 20, and red otherwise. You can use a callback function in the style() method and include the conditional logic. The callback function uses the d parameter to represent the data point:

selection.style("color", (d) => {
  /* Logic that returns the color based on a condition */
});
The style() method is not limited to setting the color - it can be used with other CSS properties as well.


Task:
Add the style() method to the code in the editor to set the color of the h2 elements conditionally. Write the callback function so if the data value is less than 20, it returns "red", otherwise it returns "green".

Note
You can use if-else logic, or the ternary operator.


The first h2 should have a color of red.
Passed
The second h2 should have a color of green.
Passed
The third h2 should have a color of green.
Passed
The fourth h2 should have a color of red.
Passed
The fifth h2 should have a color of green.
Passed
The sixth h2 should have a color of red.
Passed
The seventh h2 should have a color of green.
Passed
The eighth h2 should have a color of red.
Passed
The ninth h2 should have a color of red.


Solution:

```
<body>
  <script>
    const dataset = [12, 31, 22, 17, 25, 18, 29, 14, 9];

    d3.select("body").selectAll("h2")
      .data(dataset)
      .enter()
      .append("h2")
      .text((d) => (d + " USD"))
      // Add your code below this line

         .style("color", (d) =>{
               if(d<20){
                 return "red"
               }else{
                 return "green"
               }

         });

      // Add your code above this line
  </script>
</body>

```









